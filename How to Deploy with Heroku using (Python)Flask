Deploy with Python (or backend software)
Start here: https://devcenter.heroku.com/articles/getting-started-with-python#introduction
The tutorial assumes that you have:
a free Heroku account.
Python version 3.6 installed locally - see the installation guides for OS X, Windows, and Linux.
Pipenv installed locally. Accomplish this by running pip install pipenv.
Postgres installed locally, if running the app locally.
Once you have done the above, Got to p. 466 in Python Crash Course:
Where he says install the Heroku Toolbelt (now defunct), instead install Heroku CLI - go here to do that:
https://devcenter.heroku.com/articles/getting-started-with-python#set-up
Then go back to p. 466 in Python Crash course and install these required packages from a virtual environment (get into file (flaskvue, etc, 
then backend, set up virtual environment 11_env\Scripts\activate. Once in virtual environment, cd back to program (flaskvue) - you are now
in virtual environment. pip install dj-database-ur, pip install dj-static, pip install static3, pip install gunicorn some of these may not 
install on windows
Create a packages list with a requirements.txt file with this command in the virtual environment: pip freeze > requirements.txt
Open the requirements.txt file and add this: psycopg2>=2.6.1
Specify the Python Runtime - check your version of python with this command in your virtual environment: python --version
Create a new file in the flaskvue (or main) directory for this project called runtime.txt and enter the following into it:
python-3.6.4 (whatever version your machine told you)
Now make a procfile in your main directory - capital P and no file extension: Procfile. The Procfile tells the web what file to open
to make the website 'go'. In this projejt, the file that makes it go is called run.py. Once you have created it, enter 
this text into it: 
web: gunicorn run.py --log-file -
if __name__=='__run__':
    # Bind to PORT if defined, otherwise default to 5000.
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)
    
    Set up a .gitignore folder in your main directory and enter what I have in my .gitignore file. 
    Now we need to commit the project in git:
    in your virtual environment: git init
    git add .
    git commit -am "Ready for deployment to heroku."
    git status
    
    Now we push to Heroku like this:
    in virtual environment $ heroku login
    enter your email and password
    $ heroku create (unless you already have a heroku file to put this in)
    $ git push heroku master
    $ heroku git:remote - name-of-heroku-account (use this if you already have an existing repository - this will add the heroku remote)
    
    5/29/18 Push to Heroku failed for these reasons:
    Node.js: package.json not found in application root
    ! [remote rejected] master -> (pre-receive hook declined)
